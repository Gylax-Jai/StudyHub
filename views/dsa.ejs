<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>DSA Hub - Data Structures & Algorithms</title>
    <link rel="stylesheet" href="css/output.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/js/all.min.js"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap');

        body {
            font-family: 'Inter', sans-serif;
        }

        .gradient-bg {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }

        .card-hover {
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            transform-origin: center;
        }

        .card-hover:hover {
            transform: translateY(-12px) scale(1.02);
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);
        }

        .glow {
            box-shadow: 0 0 30px rgba(99, 102, 241, 0.4);
        }

        .animated-gradient {
            background: linear-gradient(-45deg, #667eea, #764ba2, #f093fb, #f5576c, #4facfe, #00f2fe);
            background-size: 400% 400%;
            animation: gradient 8s ease infinite;
        }

        @keyframes gradient {
            0% {
                background-position: 0% 50%;
            }

            50% {
                background-position: 100% 50%;
            }

            100% {
                background-position: 0% 50%;
            }
        }

        .floating {
            animation: float 6s ease-in-out infinite;
        }

        @keyframes float {
            0% {
                transform: translateY(0px);
            }

            50% {
                transform: translateY(-15px);
            }

            100% {
                transform: translateY(0px);
            }
        }

        .pulse-slow {
            animation: pulse 3s cubic-bezier(0.4, 0, 0.6, 1) infinite;
        }

        .code-block {
            background: linear-gradient(135deg, #1a1a2e 0%, #16213e 100%);
            border: 1px solid #2d3748;
        }

        .complexity-badge {
            background: linear-gradient(135deg, #ff6b6b, #ee5a52);
            animation: shimmer 2s infinite;
        }

        @keyframes shimmer {
            0% {
                background-position: -200% center;
            }

            100% {
                background-position: 200% center;
            }
        }

        .nav-link {
            position: relative;
            overflow: hidden;
        }

        .nav-link::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.5s;
        }

        .nav-link:hover::before {
            left: 100%;
        }

        .section-enter {
            opacity: 0;
            transform: translateY(50px);
            animation: sectionEnter 0.8s ease-out forwards;
        }

        @keyframes sectionEnter {
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>
</head>

<body class="bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100 min-h-screen">
    <%- include('partials/navbar') %>

        <main class="max-w-7xl mx-auto p-6 mt-8 space-y-16">

            <!-- Hero Header -->
            <div class="text-center relative section-enter">
                <div class="absolute inset-0 animated-gradient opacity-20 rounded-3xl blur-3xl"></div>
                <div
                    class="relative bg-white/95 backdrop-blur-sm rounded-3xl p-12 shadow-2xl border border-white/50 glow">
                    <div class="inline-flex items-center gap-4 mb-6">
                        <div class="p-4 animated-gradient rounded-2xl floating">
                            <i class="fas fa-brain text-white text-3xl"></i>
                        </div>
                        <h1
                            class="text-6xl font-black bg-gradient-to-r from-purple-600 via-pink-600 to-red-600 bg-clip-text text-transparent">
                            Data Structures & Algorithms
                        </h1>
                    </div>
                    <p class="text-2xl text-gray-600 font-medium mb-6">Master the Art of Problem Solving</p>
                    <div class="flex items-center justify-center gap-8 text-sm text-gray-500">
                        <div class="flex items-center gap-2">
                            <i class="fas fa-clock text-purple-500"></i>
                            <span>Updated: May 2025</span>
                        </div>
                        <div class="flex items-center gap-2">
                            <i class="fas fa-star text-yellow-500"></i>
                            <span>FAANG Ready</span>
                        </div>
                        <div class="flex items-center gap-2">
                            <i class="fas fa-trophy text-orange-500"></i>
                            <span>Interview Focused</span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Stats Dashboard -->
            <div class="grid grid-cols-1 md:grid-cols-4 gap-6 section-enter">
                <div class="bg-gradient-to-br from-blue-500 to-blue-600 rounded-2xl p-6 text-white card-hover">
                    <div class="flex items-center justify-between mb-4">
                        <i class="fas fa-list text-3xl opacity-80"></i>
                        <span class="text-2xl font-bold">8+</span>
                    </div>
                    <h3 class="font-bold text-lg">Data Structures</h3>
                    <p class="text-blue-100 text-sm">Core concepts covered</p>
                </div>

                <div class="bg-gradient-to-br from-green-500 to-green-600 rounded-2xl p-6 text-white card-hover">
                    <div class="flex items-center justify-between mb-4">
                        <i class="fas fa-sort text-3xl opacity-80"></i>
                        <span class="text-2xl font-bold">15+</span>
                    </div>
                    <h3 class="font-bold text-lg">Algorithms</h3>
                    <p class="text-green-100 text-sm">Sorting & searching</p>
                </div>

                <div class="bg-gradient-to-br from-purple-500 to-purple-600 rounded-2xl p-6 text-white card-hover">
                    <div class="flex items-center justify-between mb-4">
                        <i class="fas fa-clock text-3xl opacity-80"></i>
                        <span class="text-2xl font-bold">O(n)</span>
                    </div>
                    <h3 class="font-bold text-lg">Time Complexity</h3>
                    <p class="text-purple-100 text-sm">Analysis covered</p>
                </div>

                <div class="bg-gradient-to-br from-orange-500 to-red-500 rounded-2xl p-6 text-white card-hover">
                    <div class="flex items-center justify-between mb-4">
                        <i class="fas fa-code text-3xl opacity-80"></i>
                        <span class="text-2xl font-bold">100+</span>
                    </div>
                    <h3 class="font-bold text-lg">Problems</h3>
                    <p class="text-orange-100 text-sm">Practice questions</p>
                </div>
            </div>

            <!-- Quick Access Menu -->
            <div
                class="bg-white/90 backdrop-blur-sm rounded-3xl shadow-2xl border border-white/50 overflow-hidden section-enter">
                <div class="animated-gradient p-8">
                    <h2 class="text-3xl font-bold text-white text-center flex items-center justify-center gap-3">
                        <i class="fas fa-rocket"></i>
                        Quick Access Menu
                    </h2>
                </div>
                <div class="p-8">
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">

                        <a href="#arrays"
                            class="group bg-gradient-to-br from-blue-50 to-indigo-50 p-6 rounded-2xl border border-blue-200 card-hover">
                            <div class="flex items-center gap-4 mb-4">
                                <div
                                    class="w-14 h-14 bg-gradient-to-r from-blue-500 to-indigo-500 rounded-xl flex items-center justify-center group-hover:scale-110 transition-transform">
                                    <i class="fas fa-th-large text-white text-xl"></i>
                                </div>
                                <div>
                                    <h3 class="text-xl font-bold text-blue-700 group-hover:text-blue-600">Arrays &
                                        Strings</h3>
                                    <span class="text-sm text-blue-500">Linear Data Structures</span>
                                </div>
                            </div>
                            <p class="text-gray-600 text-sm">Dynamic arrays, string manipulation, two-pointers technique
                            </p>
                        </a>

                        <a href="#linkedlist"
                            class="group bg-gradient-to-br from-green-50 to-emerald-50 p-6 rounded-2xl border border-green-200 card-hover">
                            <div class="flex items-center gap-4 mb-4">
                                <div
                                    class="w-14 h-14 bg-gradient-to-r from-green-500 to-emerald-500 rounded-xl flex items-center justify-center group-hover:scale-110 transition-transform">
                                    <i class="fas fa-link text-white text-xl"></i>
                                </div>
                                <div>
                                    <h3 class="text-xl font-bold text-green-700 group-hover:text-green-600">Linked Lists
                                    </h3>
                                    <span class="text-sm text-green-500">Node-based Structure</span>
                                </div>
                            </div>
                            <p class="text-gray-600 text-sm">Singly, doubly, circular linked lists with advanced
                                operations</p>
                        </a>

                        <a href="#stacks"
                            class="group bg-gradient-to-br from-purple-50 to-pink-50 p-6 rounded-2xl border border-purple-200 card-hover">
                            <div class="flex items-center gap-4 mb-4">
                                <div
                                    class="w-14 h-14 bg-gradient-to-r from-purple-500 to-pink-500 rounded-xl flex items-center justify-center group-hover:scale-110 transition-transform">
                                    <i class="fas fa-layer-group text-white text-xl"></i>
                                </div>
                                <div>
                                    <h3 class="text-xl font-bold text-purple-700 group-hover:text-purple-600">Stacks &
                                        Queues</h3>
                                    <span class="text-sm text-purple-500">LIFO & FIFO</span>
                                </div>
                            </div>
                            <p class="text-gray-600 text-sm">Stack operations, queue variants, deque implementation</p>
                        </a>

                        <a href="#trees"
                            class="group bg-gradient-to-br from-orange-50 to-red-50 p-6 rounded-2xl border border-orange-200 card-hover">
                            <div class="flex items-center gap-4 mb-4">
                                <div
                                    class="w-14 h-14 bg-gradient-to-r from-orange-500 to-red-500 rounded-xl flex items-center justify-center group-hover:scale-110 transition-transform">
                                    <i class="fas fa-sitemap text-white text-xl"></i>
                                </div>
                                <div>
                                    <h3 class="text-xl font-bold text-orange-700 group-hover:text-orange-600">Trees</h3>
                                    <span class="text-sm text-orange-500">Hierarchical Structure</span>
                                </div>
                            </div>
                            <p class="text-gray-600 text-sm">Binary trees, BST, AVL, Red-Black, traversals</p>
                        </a>

                        <a href="#graphs"
                            class="group bg-gradient-to-br from-teal-50 to-cyan-50 p-6 rounded-2xl border border-teal-200 card-hover">
                            <div class="flex items-center gap-4 mb-4">
                                <div
                                    class="w-14 h-14 bg-gradient-to-r from-teal-500 to-cyan-500 rounded-xl flex items-center justify-center group-hover:scale-110 transition-transform">
                                    <i class="fas fa-project-diagram text-white text-xl"></i>
                                </div>
                                <div>
                                    <h3 class="text-xl font-bold text-teal-700 group-hover:text-teal-600">Graphs</h3>
                                    <span class="text-sm text-teal-500">Network Structure</span>
                                </div>
                            </div>
                            <p class="text-gray-600 text-sm">DFS, BFS, shortest path, minimum spanning tree</p>
                        </a>

                        <a href="#sorting"
                            class="group bg-gradient-to-br from-yellow-50 to-amber-50 p-6 rounded-2xl border border-yellow-200 card-hover">
                            <div class="flex items-center gap-4 mb-4">
                                <div
                                    class="w-14 h-14 bg-gradient-to-r from-yellow-500 to-amber-500 rounded-xl flex items-center justify-center group-hover:scale-110 transition-transform">
                                    <i class="fas fa-sort-amount-up text-white text-xl"></i>
                                </div>
                                <div>
                                    <h3 class="text-xl font-bold text-yellow-700 group-hover:text-yellow-600">Sorting
                                        Algorithms</h3>
                                    <span class="text-sm text-yellow-500">Ordering Techniques</span>
                                </div>
                            </div>
                            <p class="text-gray-600 text-sm">Quick sort, merge sort, heap sort, comparison analysis</p>
                        </a>

                    </div>
                </div>
            </div>

            <!-- Arrays Section -->
            <section id="arrays" class="space-y-8 section-enter">
                <div class="text-center">
                    <h2
                        class="text-5xl font-bold bg-gradient-to-r from-blue-600 to-indigo-600 bg-clip-text text-transparent mb-4">
                        📊 Arrays & Strings
                    </h2>
                    <div class="w-32 h-1 bg-gradient-to-r from-blue-400 to-indigo-400 mx-auto rounded-full mb-6"></div>
                    <p class="text-xl text-gray-600 max-w-3xl mx-auto">The foundation of all data structures -
                        contiguous memory allocation for efficient access</p>
                </div>

                <!-- Array Operations -->
                <div
                    class="bg-white/90 backdrop-blur-sm rounded-3xl shadow-2xl border border-white/50 overflow-hidden card-hover">
                    <div class="bg-gradient-to-r from-blue-500 to-indigo-500 p-8">
                        <h3 class="text-3xl font-bold text-white flex items-center gap-4">
                            <i class="fas fa-cogs"></i>
                            Core Operations
                        </h3>
                    </div>
                    <div class="p-8">
                        <div class="grid md:grid-cols-2 gap-8">

                            <div class="space-y-6">
                                <div
                                    class="bg-gradient-to-br from-green-50 to-emerald-50 p-6 rounded-2xl border border-green-200">
                                    <div class="flex items-center gap-3 mb-4">
                                        <div
                                            class="w-12 h-12 bg-gradient-to-r from-green-500 to-emerald-500 rounded-lg flex items-center justify-center">
                                            <i class="fas fa-search text-white"></i>
                                        </div>
                                        <h4 class="text-xl font-bold text-green-700">Access & Search</h4>
                                    </div>
                                    <div class="space-y-3">
                                        <div class="flex justify-between items-center p-3 bg-green-100 rounded-lg">
                                            <span class="font-medium text-green-800">Random Access</span>
                                            <span
                                                class="complexity-badge text-white px-3 py-1 rounded-full text-sm font-bold">O(1)</span>
                                        </div>
                                        <div class="flex justify-between items-center p-3 bg-green-100 rounded-lg">
                                            <span class="font-medium text-green-800">Linear Search</span>
                                            <span
                                                class="bg-orange-500 text-white px-3 py-1 rounded-full text-sm font-bold">O(n)</span>
                                        </div>
                                        <div class="flex justify-between items-center p-3 bg-green-100 rounded-lg">
                                            <span class="font-medium text-green-800">Binary Search</span>
                                            <span
                                                class="bg-blue-500 text-white px-3 py-1 rounded-full text-sm font-bold">O(log
                                                n)</span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="space-y-6">
                                <div
                                    class="bg-gradient-to-br from-purple-50 to-pink-50 p-6 rounded-2xl border border-purple-200">
                                    <div class="flex items-center gap-3 mb-4">
                                        <div
                                            class="w-12 h-12 bg-gradient-to-r from-purple-500 to-pink-500 rounded-lg flex items-center justify-center">
                                            <i class="fas fa-edit text-white"></i>
                                        </div>
                                        <h4 class="text-xl font-bold text-purple-700">Insertion & Deletion</h4>
                                    </div>
                                    <div class="space-y-3">
                                        <div class="flex justify-between items-center p-3 bg-purple-100 rounded-lg">
                                            <span class="font-medium text-purple-800">Insert at End</span>
                                            <span
                                                class="complexity-badge text-white px-3 py-1 rounded-full text-sm font-bold">O(1)</span>
                                        </div>
                                        <div class="flex justify-between items-center p-3 bg-purple-100 rounded-lg">
                                            <span class="font-medium text-purple-800">Insert at Middle</span>
                                            <span
                                                class="bg-orange-500 text-white px-3 py-1 rounded-full text-sm font-bold">O(n)</span>
                                        </div>
                                        <div class="flex justify-between items-center p-3 bg-purple-100 rounded-lg">
                                            <span class="font-medium text-purple-800">Delete Element</span>
                                            <span
                                                class="bg-orange-500 text-white px-3 py-1 rounded-full text-sm font-bold">O(n)</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Code Example -->
                        <div class="mt-8">
                            <h4 class="text-2xl font-bold text-gray-800 mb-4 flex items-center gap-3">
                                <i class="fas fa-code text-blue-500"></i>
                                Implementation Example
                            </h4>
                            <div class="code-block rounded-2xl p-6 text-green-400 font-mono text-sm overflow-x-auto">
                                <div class="text-gray-400 mb-2">// Dynamic Array (Python List)</div>
                                <div class="text-blue-400">def</div> <span
                                    class="text-yellow-400">binary_search</span>(<span class="text-orange-400">arr,
                                    target</span>):
                                <div class="ml-4">
                                    <div><span class="text-blue-400">left, right</span> = <span
                                            class="text-pink-400">0</span>, <span class="text-pink-400">len(arr) -
                                            1</span></div>
                                    <div class="mt-2"><span class="text-blue-400">while</span> left <= right:</div>
                                            <div class="ml-4">
                                                <div><span class="text-blue-400">mid</span> = (left + right) // <span
                                                        class="text-pink-400">2</span></div>
                                                <div><span class="text-blue-400">if</span> arr[mid] == target:</div>
                                                <div class="ml-4"><span class="text-blue-400">return</span> mid</div>
                                                <div><span class="text-blue-400">elif</span> arr[mid] < target:</div>
                                                        <div class="ml-4">left = mid + <span
                                                                class="text-pink-400">1</span></div>
                                                        <div><span class="text-blue-400">else</span>:</div>
                                                        <div class="ml-4">right = mid - <span
                                                                class="text-pink-400">1</span></div>
                                                </div>
                                                <div class="mt-2"><span class="text-blue-400">return</span> <span
                                                        class="text-pink-400">-1</span></div>
                                            </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Two Pointers Technique -->
                        <div
                            class="bg-white/90 backdrop-blur-sm rounded-3xl shadow-2xl border border-white/50 overflow-hidden card-hover">
                            <div class="bg-gradient-to-r from-teal-500 to-cyan-500 p-8">
                                <h3 class="text-3xl font-bold text-white flex items-center gap-4">
                                    <i class="fas fa-arrows-alt-h"></i>
                                    Two Pointers Technique
                                </h3>
                            </div>
                            <div class="p-8">
                                <p class="text-lg text-gray-700 leading-relaxed mb-8">A powerful technique for solving
                                    array problems efficiently by using two pointers moving in opposite directions or at
                                    different speeds.</p>

                                <div class="grid md:grid-cols-3 gap-6">
                                    <div
                                        class="bg-gradient-to-br from-teal-50 to-cyan-50 p-6 rounded-2xl border border-teal-200">
                                        <h4 class="font-bold text-teal-700 text-lg mb-3 flex items-center gap-2">
                                            <i class="fas fa-bullseye text-teal-500"></i>
                                            Target Sum
                                        </h4>
                                        <p class="text-gray-700 text-sm mb-3">Find pairs that sum to a target value</p>
                                        <div class="bg-teal-100 rounded-lg p-3">
                                            <span class="text-teal-800 font-mono text-sm">left = 0, right = n-1</span>
                                        </div>
                                    </div>

                                    <div
                                        class="bg-gradient-to-br from-blue-50 to-indigo-50 p-6 rounded-2xl border border-blue-200">
                                        <h4 class="font-bold text-blue-700 text-lg mb-3 flex items-center gap-2">
                                            <i class="fas fa-compress-arrows-alt text-blue-500"></i>
                                            Palindrome Check
                                        </h4>
                                        <p class="text-gray-700 text-sm mb-3">Check if string/array is palindrome</p>
                                        <div class="bg-blue-100 rounded-lg p-3">
                                            <span class="text-blue-800 font-mono text-sm">Compare from both ends</span>
                                        </div>
                                    </div>

                                    <div
                                        class="bg-gradient-to-br from-purple-50 to-pink-50 p-6 rounded-2xl border border-purple-200">
                                        <h4 class="font-bold text-purple-700 text-lg mb-3 flex items-center gap-2">
                                            <i class="fas fa-exchange-alt text-purple-500"></i>
                                            Remove Duplicates
                                        </h4>
                                        <p class="text-gray-700 text-sm mb-3">Fast and slow pointer approach</p>
                                        <div class="bg-purple-100 rounded-lg p-3">
                                            <span class="text-purple-800 font-mono text-sm">slow = 0, fast = 1</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
            </section>

            <!-- Trees Section -->
            <section id="trees" class="space-y-8 section-enter">
                <div class="text-center">
                    <h2
                        class="text-5xl font-bold bg-gradient-to-r from-green-600 to-emerald-600 bg-clip-text text-transparent mb-4">
                        🌳 Trees
                    </h2>
                    <div class="w-32 h-1 bg-gradient-to-r from-green-400 to-emerald-400 mx-auto rounded-full mb-6">
                    </div>
                    <p class="text-xl text-gray-600 max-w-3xl mx-auto">Hierarchical data structures that model
                        parent-child relationships</p>
                </div>

                <!-- Binary Trees -->
                <div
                    class="bg-white/90 backdrop-blur-sm rounded-3xl shadow-2xl border border-white/50 overflow-hidden card-hover">
                    <div class="bg-gradient-to-r from-green-500 to-emerald-500 p-8">
                        <h3 class="text-3xl font-bold text-white flex items-center gap-4">
                            <i class="fas fa-code-branch"></i>
                            Binary Trees
                        </h3>
                    </div>
                    <div class="p-8">
                        <div class="grid md:grid-cols-2 gap-8">

                            <!-- Tree Properties -->
                            <div class="space-y-6">
                                <h4 class="text-2xl font-bold text-gray-800 mb-4">Key Properties</h4>
                                <div class="space-y-4">
                                    <div
                                        class="bg-gradient-to-r from-orange-50 to-red-50 p-4 rounded-xl border border-orange-200">
                                        <div class="flex items-center gap-3 mb-2">
                                            <i class="fas fa-play text-orange-500"></i>
                                            <span class="font-bold text-orange-700">Preorder</span>
                                        </div>
                                        <span class="font-mono text-orange-800">Root → Left → Right</span>
                                    </div>

                                    <div
                                        class="bg-gradient-to-r from-teal-50 to-cyan-50 p-4 rounded-xl border border-teal-200">
                                        <div class="flex items-center gap-3 mb-2">
                                            <i class="fas fa-sort text-teal-500"></i>
                                            <span class="font-bold text-teal-700">Inorder</span>
                                        </div>
                                        <span class="font-mono text-teal-800">Left → Root → Right</span>
                                    </div>

                                    <div
                                        class="bg-gradient-to-r from-pink-50 to-rose-50 p-4 rounded-xl border border-pink-200">
                                        <div class="flex items-center gap-3 mb-2">
                                            <i class="fas fa-step-backward text-pink-500"></i>
                                            <span class="font-bold text-pink-700">Postorder</span>
                                        </div>
                                        <span class="font-mono text-pink-800">Left → Right → Root</span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Tree Implementation -->
                        <div class="mt-8">
                            <h4 class="text-2xl font-bold text-gray-800 mb-4 flex items-center gap-3">
                                <i class="fas fa-code text-green-500"></i>
                                Binary Tree Node
                            </h4>
                            <div class="code-block rounded-2xl p-6 text-green-400 font-mono text-sm overflow-x-auto">
                                <div class="text-gray-400 mb-2">// Binary Tree Node Structure</div>
                                <div><span class="text-blue-400">class</span> <span
                                        class="text-yellow-400">TreeNode</span>:</div>
                                <div class="ml-4">
                                    <div><span class="text-blue-400">def</span> <span
                                            class="text-yellow-400">__init__</span>(<span class="text-orange-400">self,
                                            val=0</span>):</div>
                                    <div class="ml-4">
                                        <div><span class="text-blue-400">self.val</span> = val</div>
                                        <div><span class="text-blue-400">self.left</span> = <span
                                                class="text-pink-400">None</span></div>
                                        <div><span class="text-blue-400">self.right</span> = <span
                                                class="text-pink-400">None</span></div>
                                    </div>
                                </div>
                                <div class="mt-4">
                                    <div class="text-gray-400"># Inorder Traversal (Recursive)</div>
                                    <div><span class="text-blue-400">def</span> <span
                                            class="text-yellow-400">inorder</span>(<span
                                            class="text-orange-400">root</span>):</div>
                                    <div class="ml-4">
                                        <div><span class="text-blue-400">if</span> root:</div>
                                        <div class="ml-4">
                                            <div>inorder(root.left)</div>
                                            <div><span class="text-pink-400">print</span>(root.val)</div>
                                            <div>inorder(root.right)</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Binary Search Tree -->
                <div
                    class="bg-white/90 backdrop-blur-sm rounded-3xl shadow-2xl border border-white/50 overflow-hidden card-hover">
                    <div class="bg-gradient-to-r from-purple-500 to-indigo-500 p-8">
                        <h3 class="text-3xl font-bold text-white flex items-center gap-4">
                            <i class="fas fa-search"></i>
                            Binary Search Tree (BST)
                        </h3>
                    </div>
                    <div class="p-8">
                        <p class="text-lg text-gray-700 leading-relaxed mb-8">A binary tree where left subtree contains
                            nodes with values less than root, and right subtree contains nodes with values greater than
                            root.</p>

                        <div class="grid md:grid-cols-3 gap-6">
                            <div
                                class="bg-gradient-to-br from-green-50 to-emerald-50 p-6 rounded-2xl border border-green-200">
                                <h4 class="font-bold text-green-700 text-lg mb-3 flex items-center gap-2">
                                    <i class="fas fa-search text-green-500"></i>
                                    Search Operation
                                </h4>
                                <div class="space-y-2 text-sm text-gray-700 mb-4">
                                    <p>• Compare with root</p>
                                    <p>• Go left if smaller</p>
                                    <p>• Go right if larger</p>
                                </div>
                                <div class="bg-green-100 rounded-lg p-3">
                                    <span class="text-green-800 font-bold">Average: O(log n)</span>
                                </div>
                            </div>

                            <div
                                class="bg-gradient-to-br from-blue-50 to-cyan-50 p-6 rounded-2xl border border-blue-200">
                                <h4 class="font-bold text-blue-700 text-lg mb-3 flex items-center gap-2">
                                    <i class="fas fa-plus text-blue-500"></i>
                                    Insert Operation
                                </h4>
                                <div class="space-y-2 text-sm text-gray-700 mb-4">
                                    <p>• Find correct position</p>
                                    <p>• Maintain BST property</p>
                                    <p>• Insert as leaf node</p>
                                </div>
                                <div class="bg-blue-100 rounded-lg p-3">
                                    <span class="text-blue-800 font-bold">Average: O(log n)</span>
                                </div>
                            </div>

                            <div
                                class="bg-gradient-to-br from-red-50 to-orange-50 p-6 rounded-2xl border border-red-200">
                                <h4 class="font-bold text-red-700 text-lg mb-3 flex items-center gap-2">
                                    <i class="fas fa-trash text-red-500"></i>
                                    Delete Operation
                                </h4>
                                <div class="space-y-2 text-sm text-gray-700 mb-4">
                                    <p>• Leaf: Direct removal</p>
                                    <p>• One child: Replace</p>
                                    <p>• Two children: Successor</p>
                                </div>
                                <div class="bg-red-100 rounded-lg p-3">
                                    <span class="text-red-800 font-bold">Average: O(log n)</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            <!-- Graphs Section -->
            <section id="graphs" class="space-y-8 section-enter">
                <div class="text-center">
                    <h2
                        class="text-5xl font-bold bg-gradient-to-r from-teal-600 to-cyan-600 bg-clip-text text-transparent mb-4">
                        🕸️ Graphs
                    </h2>
                    <div class="w-32 h-1 bg-gradient-to-r from-teal-400 to-cyan-400 mx-auto rounded-full mb-6"></div>
                    <p class="text-xl text-gray-600 max-w-3xl mx-auto">Non-linear data structures consisting of vertices
                        connected by edges</p>
                </div>

                <!-- Graph Traversals -->
                <div
                    class="bg-white/90 backdrop-blur-sm rounded-3xl shadow-2xl border border-white/50 overflow-hidden card-hover">
                    <div class="bg-gradient-to-r from-teal-500 to-cyan-500 p-8">
                        <h3 class="text-3xl font-bold text-white flex items-center gap-4">
                            <i class="fas fa-route"></i>
                            Graph Traversals
                        </h3>
                    </div>
                    <div class="p-8">
                        <div class="grid md:grid-cols-2 gap-8">

                            <!-- DFS -->
                            <div
                                class="bg-gradient-to-br from-purple-50 to-indigo-50 p-8 rounded-2xl border border-purple-200">
                                <div class="flex items-center gap-4 mb-6">
                                    <div
                                        class="w-16 h-16 bg-gradient-to-r from-purple-500 to-indigo-500 rounded-xl flex items-center justify-center">
                                        <i class="fas fa-arrow-down text-white text-2xl"></i>
                                    </div>
                                    <div>
                                        <h4 class="text-2xl font-bold text-purple-700">Depth-First Search</h4>
                                        <span class="text-purple-600">Go as deep as possible</span>
                                    </div>
                                </div>

                                <div class="space-y-4">
                                    <div class="bg-purple-100 rounded-lg p-4">
                                        <h5 class="font-bold text-purple-800 mb-2">Implementation:</h5>
                                        <ul class="text-sm text-purple-700 space-y-1">
                                            <li>• Uses Stack (or recursion)</li>
                                            <li>• Mark visited nodes</li>
                                            <li>• Explore unvisited neighbors</li>
                                        </ul>
                                    </div>

                                    <div class="bg-purple-100 rounded-lg p-4">
                                        <h5 class="font-bold text-purple-800 mb-2">Applications:</h5>
                                        <ul class="text-sm text-purple-700 space-y-1">
                                            <li>• Cycle detection</li>
                                            <li>• Topological sorting</li>
                                            <li>• Path finding</li>
                                        </ul>
                                    </div>

                                    <div class="flex justify-center">
                                        <span class="bg-purple-500 text-white px-4 py-2 rounded-full font-bold">Time:
                                            O(V + E)</span>
                                    </div>
                                </div>
                            </div>

                            <!-- BFS -->
                            <div
                                class="bg-gradient-to-br from-blue-50 to-cyan-50 p-8 rounded-2xl border border-blue-200">
                                <div class="flex items-center gap-4 mb-6">
                                    <div
                                        class="w-16 h-16 bg-gradient-to-r from-blue-500 to-cyan-500 rounded-xl flex items-center justify-center">
                                        <i class="fas fa-arrows-alt text-white text-2xl"></i>
                                    </div>
                                    <div>
                                        <h4 class="text-2xl font-bold text-blue-700">Breadth-First Search</h4>
                                        <span class="text-blue-600">Explore level by level</span>
                                    </div>
                                </div>

                                <div class="space-y-4">
                                    <div class="bg-blue-100 rounded-lg p-4">
                                        <h5 class="font-bold text-blue-800 mb-2">Implementation:</h5>
                                        <ul class="text-sm text-blue-700 space-y-1">
                                            <li>• Uses Queue</li>
                                            <li>• Visit all neighbors first</li>
                                            <li>• Level-order traversal</li>
                                        </ul>
                                    </div>

                                    <div class="bg-blue-100 rounded-lg p-4">
                                        <h5 class="font-bold text-blue-800 mb-2">Applications:</h5>
                                        <ul class="text-sm text-blue-700 space-y-1">
                                            <li>• Shortest path (unweighted)</li>
                                            <li>• Level-order processing</li>
                                            <li>• Minimum spanning tree</li>
                                        </ul>
                                    </div>

                                    <div class="flex justify-center">
                                        <span class="bg-blue-500 text-white px-4 py-2 rounded-full font-bold">Time: O(V
                                            + E)</span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Implementation Example -->
                        <div class="mt-8">
                            <h4 class="text-2xl font-bold text-gray-800 mb-4 flex items-center gap-3">
                                <i class="fas fa-code text-teal-500"></i>
                                BFS Implementation
                            </h4>
                            <div class="code-block rounded-2xl p-6 text-green-400 font-mono text-sm overflow-x-auto">
                                <div class="text-gray-400 mb-2">// BFS Traversal using Queue</div>
                                <div><span class="text-blue-400">from</span> collections <span
                                        class="text-blue-400">import</span> deque</div>
                                <div class="mt-2">
                                    <div><span class="text-blue-400">def</span> <span
                                            class="text-yellow-400">bfs</span>(<span class="text-orange-400">graph,
                                            start</span>):</div>
                                    <div class="ml-4">
                                        <div><span class="text-blue-400">visited</span> = <span
                                                class="text-pink-400">set()</span></div>
                                        <div><span class="text-blue-400">queue</span> = deque([start])</div>
                                        <div><span class="text-blue-400">result</span> = []</div>
                                        <div class="mt-2">
                                            <div><span class="text-blue-400">while</span> queue:</div>
                                            <div class="ml-4">
                                                <div><span class="text-blue-400">node</span> = queue.popleft()</div>
                                                <div><span class="text-blue-400">if</span> node <span
                                                        class="text-blue-400">not in</span> visited:</div>
                                                <div class="ml-4">
                                                    <div>visited.add(node)</div>
                                                    <div>result.append(node)</div>
                                                    <div><span class="text-blue-400">for</span> neighbor <span
                                                            class="text-blue-400">in</span> graph[node]:</div>
                                                    <div class="ml-4">queue.append(neighbor)</div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="mt-2"><span class="text-blue-400">return</span> result</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            <!-- Sorting Algorithms Section -->
            <section id="sorting" class="space-y-8 section-enter">
                <div class="text-center">
                    <h2
                        class="text-5xl font-bold bg-gradient-to-r from-yellow-600 to-orange-600 bg-clip-text text-transparent mb-4">
                        🔢 Sorting Algorithms
                    </h2>
                    <div class="w-32 h-1 bg-gradient-to-r from-yellow-400 to-orange-400 mx-auto rounded-full mb-6">
                    </div>
                    <p class="text-xl text-gray-600 max-w-3xl mx-auto">Algorithms for arranging elements in a particular
                        order</p>
                </div>

                <!-- Sorting Comparison -->
                <div
                    class="bg-white/90 backdrop-blur-sm rounded-3xl shadow-2xl border border-white/50 overflow-hidden card-hover">
                    <div class="bg-gradient-to-r from-yellow-500 to-orange-500 p-8">
                        <h3 class="text-3xl font-bold text-white flex items-center gap-4">
                            <i class="fas fa-chart-bar"></i>
                            Algorithm Comparison
                        </h3>
                    </div>
                    <div class="p-8">
                        <div class="overflow-x-auto">
                            <table class="w-full">
                                <thead>
                                    <tr class="bg-gradient-to-r from-gray-100 to-gray-200">
                                        <th class="text-left p-4 font-bold text-gray-800">Algorithm</th>
                                        <th class="text-center p-4 font-bold text-gray-800">Best Case</th>
                                        <th class="text-center p-4 font-bold text-gray-800">Average Case</th>
                                        <th class="text-center p-4 font-bold text-gray-800">Worst Case</th>
                                        <th class="text-center p-4 font-bold text-gray-800">Space</th>
                                        <th class="text-center p-4 font-bold text-gray-800">Stable</th>
                                    </tr>
                                </thead>
                                <tbody class="divide-y divide-gray-200">
                                    <tr class="hover:bg-blue-50 transition-colors">
                                        <td class="p-4 font-medium text-blue-700">Quick Sort</td>
                                        <td class="p-4 text-center"><span
                                                class="bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-bold">O(n
                                                log n)</span></td>
                                        <td class="p-4 text-center"><span
                                                class="bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-bold">O(n
                                                log n)</span></td>
                                        <td class="p-4 text-center"><span
                                                class="bg-red-100 text-red-800 px-3 py-1 rounded-full text-sm font-bold">O(n²)</span>
                                        </td>
                                        <td class="p-4 text-center"><span
                                                class="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-bold">O(log
                                                n)</span></td>
                                        <td class="p-4 text-center"><span class="text-red-600">❌</span></td>
                                    </tr>
                                    <tr class="hover:bg-green-50 transition-colors">
                                        <td class="p-4 font-medium text-green-700">Merge Sort</td>
                                        <td class="p-4 text-center"><span
                                                class="bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-bold">O(n
                                                log n)</span></td>
                                        <td class="p-4 text-center"><span
                                                class="bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-bold">O(n
                                                log n)</span></td>
                                        <td class="p-4 text-center"><span
                                                class="bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-bold">O(n
                                                log n)</span></td>
                                        <td class="p-4 text-center"><span
                                                class="bg-orange-100 text-orange-800 px-3 py-1 rounded-full text-sm font-bold">O(n)</span>
                                        </td>
                                        <td class="p-4 text-center"><span class="text-green-600">✅</span></td>
                                    </tr>
                                    <tr class="hover:bg-purple-50 transition-colors">
                                        <td class="p-4 font-medium text-purple-700">Heap Sort</td>
                                        <td class="p-4 text-center"><span
                                                class="bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-bold">O(n
                                                log n)</span></td>
                                        <td class="p-4 text-center"><span
                                                class="bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-bold">O(n
                                                log n)</span></td>
                                        <td class="p-4 text-center"><span
                                                class="bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-bold">O(n
                                                log n)</span></td>
                                        <td class="p-4 text-center"><span
                                                class="bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-bold">O(1)</span>
                                        </td>
                                        <td class="p-4 text-center"><span class="text-red-600">❌</span></td>
                                    </tr>
                                    <tr class="hover:bg-orange-50 transition-colors">
                                        <td class="p-4 font-medium text-orange-700">Bubble Sort</td>
                                        <td class="p-4 text-center"><span
                                                class="bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-bold">O(n)</span>
                                        </td>
                                        <td class="p-4 text-center"><span
                                                class="bg-red-100 text-red-800 px-3 py-1 rounded-full text-sm font-bold">O(n²)</span>
                                        </td>
                                        <td class="p-4 text-center"><span
                                                class="bg-red-100 text-red-800 px-3 py-1 rounded-full text-sm font-bold">O(n²)</span>
                                        </td>
                                        <td class="p-4 text-center"><span
                                                class="bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-bold">O(1)</span>
                                        </td>
                                        <td class="p-4 text-center"><span class="text-green-600">✅</span></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <!-- Quick Sort Deep Dive -->
                <div
                    class="bg-white/90 backdrop-blur-sm rounded-3xl shadow-2xl border border-white/50 overflow-hidden card-hover">
                    <div class="bg-gradient-to-r from-blue-500 to-purple-500 p-8">
                        <h3 class="text-3xl font-bold text-white flex items-center gap-4">
                            <i class="fas fa-bolt"></i>
                            Quick Sort - Divide & Conquer
                        </h3>
                    </div>
                    <div class="p-8">
                        <p class="text-lg text-gray-700 leading-relaxed mb-8">A highly efficient sorting algorithm that
                            uses divide-and-conquer strategy with pivot selection.</p>

                        <div class="grid md:grid-cols-2 gap-8">
                            <!-- Algorithm Steps -->
                            <div class="space-y-6">
                                <h4 class="text-2xl font-bold text-gray-800 mb-4">Algorithm Steps</h4>
                                <div class="space-y-4">
                                    <div
                                        class="flex items-start gap-4 p-4 bg-gradient-to-r from-blue-50 to-indigo-50 rounded-xl border border-blue-200">
                                        <div
                                            class="w-8 h-8 bg-blue-500 text-white rounded-full flex items-center justify-center font-bold text-sm">
                                            1</div>
                                        <div>
                                            <h5 class="font-bold text-blue-700">Choose Pivot</h5>
                                            <p class="text-sm text-gray-600">Select an element as pivot (first, last, or
                                                random)</p>
                                        </div>
                                    </div>

                                    <div
                                        class="flex items-start gap-4 p-4 bg-gradient-to-r from-green-50 to-emerald-50 rounded-xl border border-green-200">
                                        <div
                                            class="w-8 h-8 bg-green-500 text-white rounded-full flex items-center justify-center font-bold text-sm">
                                            2</div>
                                        <div>
                                            <h5 class="font-bold text-green-700">Partition</h5>
                                            <p class="text-sm text-gray-600">Rearrange array so smaller elements are
                                                left, larger are right</p>
                                        </div>
                                    </div>

                                    <div
                                        class="flex items-start gap-4 p-4 bg-gradient-to-r from-purple-50 to-pink-50 rounded-xl border border-purple-200">
                                        <div
                                            class="w-8 h-8 bg-purple-500 text-white rounded-full flex items-center justify-center font-bold text-sm">
                                            3</div>
                                        <div>
                                            <h5 class="font-bold text-purple-700">Recursively Sort</h5>
                                            <p class="text-sm text-gray-600">Apply quick sort to left and right
                                                subarrays</p>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Implementation -->
                            <div>
                                <h4 class="text-2xl font-bold text-gray-800 mb-4 flex items-center gap-3">
                                    <i class="fas fa-code text-blue-500"></i>
                                    Implementation
                                </h4>
                                <div
                                    class="code-block rounded-2xl p-6 text-green-400 font-mono text-sm overflow-x-auto">
                                    <div class="text-gray-400 mb-2">// Quick Sort Implementation</div>
                                    <div><span class="text-blue-400">def</span> <span
                                            class="text-yellow-400">quicksort</span>(<span class="text-orange-400">arr,
                                            low, high</span>):</div>
                                    <div class="ml-4">
                                        <div><span class="text-blue-400">if</span> low < high:</div>
                                                <div class="ml-4">
                                                    <div><span class="text-blue-400">pi</span> = partition(arr, low,
                                                        high)</div>
                                                    <div>quicksort(arr, low, pi - <span class="text-pink-400">1</span>)
                                                    </div>
                                                    <div>quicksort(arr, pi + <span class="text-pink-400">1</span>, high)
                                                    </div>
                                                </div>
                                        </div>
                                        <div class="mt-4">
                                            <div><span class="text-blue-400">def</span> <span
                                                    class="text-yellow-400">partition</span>(<span
                                                    class="text-orange-400">arr, low, high</span>):</div>
                                            <div class="ml-4">
                                                <div><span class="text-blue-400">pivot</span> = arr[high]</div>
                                                <div><span class="text-blue-400">i</span> = low - <span
                                                        class="text-pink-400">1</span></div>
                                                <div><span class="text-blue-400">for</span> j <span
                                                        class="text-blue-400">in</span> <span
                                                        class="text-pink-400">range</span>(low, high):</div>
                                                <div class="ml-4">
                                                    <div><span class="text-blue-400">if</span> arr[j] <= pivot:</div>
                                                            <div class="ml-4">
                                                                <div>i += <span class="text-pink-400">1</span></div>
                                                                <div>arr[i], arr[j] = arr[j], arr[i]</div>
                                                            </div>
                                                    </div>
                                                    <div>arr[i + <span class="text-pink-400">1</span>], arr[high] =
                                                        arr[high], arr[i + <span class="text-pink-400">1</span>]</div>
                                                    <div><span class="text-blue-400">return</span> i + <span
                                                            class="text-pink-4">1</span></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
            </section>

            <!-- Quick Reference Summary -->
            <div class="animated-gradient rounded-3xl p-8 text-white section-enter">
                <div class="text-center mb-8">
                    <h3 class="text-4xl font-bold mb-4">🎯 Quick Reference Cheat Sheet</h3>
                    <p class="text-xl opacity-90">Essential complexity and key points for interviews</p>
                </div>

                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                    <div class="bg-white/20 backdrop-blur-sm rounded-2xl p-6 text-center">
                        <i class="fas fa-list text-4xl mb-4 opacity-80"></i>
                        <h4 class="font-bold text-lg mb-2">Array Access</h4>
                        <code class="text-yellow-300 text-2xl">O(1)</code>
                        <p class="text-sm mt-2 opacity-75">Random access by index</p>
                    </div>

                    <div class="bg-white/20 backdrop-blur-sm rounded-2xl p-6 text-center">
                        <i class="fas fa-search text-4xl mb-4 opacity-80"></i>
                        <h4 class="font-bold text-lg mb-2">Binary Search</h4>
                        <code class="text-yellow-300 text-2xl">O(log n)</code>
                        <p class="text-sm mt-2 opacity-75">Sorted array search</p>
                    </div>

                    <div class="bg-white/20 backdrop-blur-sm rounded-2xl p-6 text-center">
                        <i class="fas fa-sitemap text-4xl mb-4 opacity-80"></i>
                        <h4 class="font-bold text-lg mb-2">Tree Height</h4>
                        <code class="text-yellow-300 text-2xl">O(log n)</code>
                        <p class="text-sm mt-2 opacity-75">Balanced binary tree</p>
                    </div>

                    <div class="bg-white/20 backdrop-blur-sm rounded-2xl p-6 text-center">
                        <i class="fas fa-sort text-4xl mb-4 opacity-80"></i>
                        <h4 class="font-bold text-lg mb-2">Merge Sort</h4>
                        <code class="text-yellow-300 text-2xl">O(n log n)</code>
                        <p class="text-sm mt-2 opacity-75">Guaranteed performance</p>
                    </div>
                </div>

                <div class="mt-8 text-center">
                    <div class="bg-white/20 backdrop-blur-sm rounde class=" bg-gradient-to-r from-green-50 to-emerald-50
                        p-4 rounded-xl border border-green-200">
                        <div class="flex items-center gap-3 mb-2">
                            <i class="fas fa-info-circle text-green-500"></i>
                            <span class="font-bold text-green-700">Maximum Nodes</span>
                        </div>
                        <span class="font-mono text-green-800">2^(h+1) - 1</span>
                        <span class="text-sm text-gray-600 ml-2">(height h)</span>
                    </div>

                    <div class="bg-gradient-to-r from-blue-50 to-indigo-50 p-4 rounded-xl border border-blue-200">
                        <div class="flex items-center gap-3 mb-2">
                            <i class="fas fa-ruler text-blue-500"></i>
                            <span class="font-bold text-blue-700">Height Range</span>
                        </div>
                        <span class="font-mono text-blue-800">log₂(n) to n-1</span>
                        <span class="text-sm text-gray-600 ml-2">(balanced to skewed)</span>
                    </div>

                    <div class="bg-gradient-to-r from-purple-50 to-pink-50 p-4 rounded-xl border border-purple-200">
                        <div class="flex items-center gap-3 mb-2">
                            <i class="fas fa-leaf text-purple-500"></i>
                            <span class="font-bold text-purple-700">Leaf Nodes</span>
                        </div>
                        <span class="font-mono text-purple-800">(n+1)/2</span>
                        <span class="text-sm text-gray-600 ml-2">(in complete tree)</span>
                    </div>
                </div>
            </div>
        </main>

        <%- include('partials/footer') %>

            <script>
                document.getElementById('mobile-menu-button').addEventListener('click', function () {
                    const mobileMenu = document.getElementById('mobile-menu');
                    mobileMenu.classList.toggle('hidden');
                });
            </script>

</body>

</html>